{"version":3,"file":"static/js/469.fc6d689a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","redux/contacts/filterSlice.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Phonebook.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const selectFilteredContacts = createSelector(\n  [selectAllContacts, selectFilter],\n  (contacts, filters) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filters.toLowerCase().trim())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const ContactsForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  margin: auto;\n  max-width: 450px;\n  gap: 10px;\n`;\nexport const ContactsLabel = styled.label`\n  font-weight: 700;\n`;\nexport const ContactsInput = styled.input`\n  display: block;\n  padding: 3px 0 3px 10px;\n  width: 440px;\n  height: 40px;\n  border: 1px solid #21212133;\n  border-radius: 4px;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    outline: none;\n    border-color: #d85841;\n  }\n`;\nexport const ContactsButton = styled.button`\n  padding: 10px 55px;\n  align-self: center;\n  align-items: center;\n  justify-content: center;\n  font-family: inherit;\n  font-weight: 700;\n  line-height: 1.87;\n  letter-spacing: 0.06em;\n  color: #fff;\n  background-color: #d85841;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: #1c4931;\n  }\n`;\n\nexport const ErrorMessages = styled.p`\n  font-weight: 700;\n  font-size: 12px;\n  color: #d85841;\n`;\n","import { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectAllContacts } from '../../redux/contacts/selectors';\nimport {\n  ContactsForm,\n  ContactsLabel,\n  ContactsInput,\n  ContactsButton,\n  ErrorMessages,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const contacts = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    contacts.some(contact => contact.name === name)\n      ? Notiflix.Notify.failure(`${name} is already in contacts`)\n      : dispatch(\n          addContact({\n            id: nanoid(4),\n            name,\n            phone,\n          })\n        );\n\n    setName('');\n    setPhone('');\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <ContactsForm onSubmit={handleSubmit}>\n      <ContactsLabel>\n        Name\n        <ContactsInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          required\n        />\n        <ErrorMessages component=\"div\" name=\"name\" />\n      </ContactsLabel>\n      <ContactsLabel>\n        Number\n        <ContactsInput\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone phone must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleChange}\n          required\n        />\n        <ErrorMessages component=\"div\" name=\"phone\" />\n      </ContactsLabel>\n      <ContactsButton type=\"submit\">Add contact</ContactsButton>\n    </ContactsForm>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  margin-right: auto;\n  flex-direction: column;\n  padding: 12px;\n  margin: auto;\n  max-width: 450px;\n  gap: 5px;\n`;\nexport const ContactsListItem = styled.li`\n  display: flex;\n`;\nexport const ContactsListInf = styled.p`\n  margin-left: 10px;\n`;\nexport const ContactsListButton = styled.button`\n  display: flex;\n  margin-left: auto;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  &:hover,\n  &:focus {\n    color: #d85841;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nimport {\n  ContactsList,\n  ContactsListItem,\n  ContactsListInf,\n  ContactsListButton,\n} from './ContactList.styled';\nimport { IoTrashBinOutline } from 'react-icons/io5';\nimport { IconContext } from 'react-icons';\nimport { MdContactPage } from 'react-icons/md';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ContactsList>\n      {contacts.map(({ id, name, phone }) => (\n        <ContactsListItem key={id}>\n          <IconContext.Provider value={{ color: '#d85841' }}>\n            <MdContactPage />\n          </IconContext.Provider>\n          <ContactsListInf>\n            <b>{name}: </b>\n            {phone}\n          </ContactsListInf>\n          <ContactsListButton\n            type=\"submit\"\n            name={name}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            <IoTrashBinOutline />\n          </ContactsListButton>\n        </ContactsListItem>\n      ))}\n    </ContactsList>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n  name: 'filters',\n  initialState: '',\n  reducers: {\n    setFilter(_, { payload }) {\n      return payload;\n    },\n  },\n});\n\nexport const { setFilter } = filterSlice.actions;\nexport const filterReducer = filterSlice.reducer;\n","import styled from 'styled-components';\n\nexport const FilterWrap = styled.div`\n  display: flex;\n  margin-right: auto;\n  flex-direction: column;\n  padding: 12px 12px 0 12px;\n  margin: auto;\n  max-width: 450px;\n  gap: 5px;\n`;\n\nexport const FilterLabel = styled.label`\n  margin-top: 10px;\n  font-weight: 700;\n`;\nexport const FilterInput = styled.input`\n  display: block;\n  padding: 3px 0 3px 10px;\n  width: 440px;\n  height: 40px;\n  border: 1px solid #21212133;\n  border-radius: 4px;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    outline: none;\n    border-color: #d85841;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux/es/exports';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { FilterWrap, FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filters = useSelector(selectFilter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <FilterWrap>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput value={filters} type=\"text\" onChange={onChange} />\n      </FilterLabel>\n    </FilterWrap>\n  );\n};\n\nexport default Filter;\n","// import { Box } from './Box';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectLoading } from 'redux/contacts/selectors';\n\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1\n        style={{\n          textAlign: 'center',\n          textTransform: 'uppercase',\n          fontSize: '28px',\n          color: '#1C4931',\n        }}\n      >\n        Phonebook\n      </h1>\n      <ContactForm />\n      <h2\n        style={{\n          textAlign: 'center',\n          textTransform: 'uppercase',\n          fontSize: '28px',\n          color: '#1C4931',\n        }}\n      >\n        Contacts\n      </h2>\n      <Filter />\n      {isLoading && !error}\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","loading","selectFilter","filter","selectError","error","selectAllContacts","items","selectFilteredContacts","createSelector","filters","contact","name","toLowerCase","includes","trim","ContactsForm","styled","ContactsLabel","ContactsInput","ContactsButton","ErrorMessages","useState","setName","phone","setPhone","useSelector","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","some","Notiflix","addContact","id","nanoid","type","pattern","title","onChange","required","component","ContactsList","ContactsListItem","ContactsListInf","ContactsListButton","map","color","onClick","deleteContact","filterSlice","createSlice","initialState","reducers","setFilter","_","payload","actions","FilterWrap","reducer","FilterLabel","FilterInput","Phonebook","isLoading","useEffect","fetchContacts","style","textAlign","textTransform","fontSize"],"sourceRoot":""}