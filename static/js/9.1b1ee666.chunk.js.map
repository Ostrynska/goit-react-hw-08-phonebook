{"version":3,"file":"static/js/9.1b1ee666.chunk.js","mappings":"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","sources":["redux/contacts/selectors.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Phonebook.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const ContactsForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  margin: auto;\n  max-width: 450px;\n  gap: 10px;\n`;\nexport const ContactsLabel = styled.label`\n  font-weight: 700;\n`;\nexport const ContactsInput = styled.input`\n  display: block;\n  padding: 3px 0 3px 10px;\n  width: 440px;\n  height: 40px;\n  border: 1px solid #21212133;\n  border-radius: 4px;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    outline: none;\n    border-color: #d85841;\n  }\n`;\nexport const ContactsButton = styled.button`\n  padding: 10px 55px;\n  align-self: center;\n  align-items: center;\n  justify-content: center;\n  font-family: inherit;\n  font-weight: 700;\n  line-height: 1.87;\n  letter-spacing: 0.06em;\n  color: #fff;\n  background-color: #d85841;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: #1c4931;\n  }\n`;","import Notiflix from 'notiflix';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nimport {\n  ContactsForm,\n  ContactsLabel,\n  ContactsInput,\n  ContactsButton,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements[0].value;\n    const number = form.elements[1].value;\n\n    const contact = {\n      name,\n      number,\n    };\n\n    if (\n      contacts\n        ?.map(({ name }) => name.toLowerCase())\n        .includes(name.toLowerCase())\n    ) {\n      Notiflix.Notify.warning(`${name} is already in contacts.`);\n      return;\n    } else {\n      dispatch(addContact(contact));\n    }\n    form.reset();\n  };\n\n  return (\n    <ContactsForm onSubmit={handleSubmit}>\n      <ContactsLabel>\n        Name\n        <ContactsInput type=\"text\" name=\"name\" required />\n      </ContactsLabel>\n      <ContactsLabel>\n        Number\n        <ContactsInput type=\"tel\" name=\"number\" required />\n      </ContactsLabel>\n      <ContactsButton type=\"submit\">Add contact</ContactsButton>\n    </ContactsForm>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  margin-right: auto;\n  flex-direction: column;\n  padding: 12px;\n  margin: auto;\n  width: 450px;\n`;\nexport const ContactsListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: baseline;\n`;\nexport const ContactsListInf = styled.p`\n  margin-left: 10px;\n`;\nexport const ContactsListButton = styled.button`\n  display: flex;\n  margin-left: auto;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  &:hover,\n  &:focus {\n    color: #d85841;\n  }\n`;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\nimport {\n  ContactsList,\n  ContactsListItem,\n  ContactsListInf,\n  ContactsListButton,\n} from './ContactList.styled';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { IoTrashBinOutline } from 'react-icons/io5';\nimport { IconContext } from 'react-icons';\nimport { MdContactPage } from 'react-icons/md';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  function handleFilter() {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n\n  const filterContacts = handleFilter();\n\n  return (\n    <ContactsList>\n      {filterContacts?.map(({ id, name, number }) => (\n        <ContactsListItem key={id}>\n          <IconContext.Provider value={{ color: '#d85841' }}>\n            <MdContactPage />\n          </IconContext.Provider>\n          <ContactsListInf>\n            <b>{name}: </b>\n            {number}\n          </ContactsListInf>\n          <ContactsListButton\n            type=\"submit\"\n            name={name}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            <IoTrashBinOutline />\n          </ContactsListButton>\n        </ContactsListItem>\n      ))}\n    </ContactsList>\n  );\n};\n\nContactList.propTypes = {\n  filterContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterWrap = styled.div`\n  display: flex;\n  margin-right: auto;\n  flex-direction: column;\n  padding: 12px 12px 0 12px;\n  margin: auto;\n  max-width: 450px;\n  gap: 5px;\n`;\n\nexport const FilterLabel = styled.label`\n  margin-top: 10px;\n  font-weight: 700;\n`;\nexport const FilterInput = styled.input`\n  display: block;\n  padding: 3px 0 3px 10px;\n  width: 440px;\n  height: 40px;\n  border: 1px solid #21212133;\n  border-radius: 4px;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    outline: none;\n    border-color: #d85841;\n  }\n`;\n","import { useDispatch } from 'react-redux/es/exports';\nimport { contactsFilter } from '../../redux/contacts/filterSlice';\nimport { FilterWrap, FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    dispatch(contactsFilter(e.target.value));\n  };\n\n  return (\n    <FilterWrap>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput type=\"text\" onChange={onChange} />\n      </FilterLabel>\n    </FilterWrap>\n  );\n};\n\nexport default Filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\n\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { theme } from '../../src/components/App';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\" theme={theme}>\n      <Box\n        sx={{\n          marginTop: 16,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <ContactForm />\n      </Box>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Typography\n          component=\"h2\"\n          variant=\"h4\"\n          color=\"primary\"\n          fontWeight={700}\n        >\n          Contacts\n        </Typography>\n        <Filter />\n        {isLoading}\n        <ContactList />\n      </Box>\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectLoading","isLoading","selectFilter","filter","ContactsForm","styled","ContactsLabel","ContactsInput","ContactsButton","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","form","target","name","elements","value","contact","number","map","toLowerCase","includes","Notiflix","addContact","reset","type","required","ContactsList","ContactsListItem","ContactsListInf","ContactsListButton","useEffect","fetchContacts","filterContacts","id","color","onClick","deleteContact","FilterWrap","FilterLabel","FilterInput","onChange","contactsFilter","Phonebook","Container","component","maxWidth","theme","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","fontWeight"],"sourceRoot":""}